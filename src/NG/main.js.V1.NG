import * as BABYLON from "@babylonjs/core";
import "@babylonjs/loaders";
import "@babylonjs/materials";
// import HavokPhysics from "@babylonjs/havok";
import HavokPhysics from "https://cdn.babylonjs.com/havok/HavokPhysics_es.js";

const canvas = document.getElementById("renderCanvas");
const engine = new BABYLON.Engine(canvas, true);


async function initScene() {
  const scene = new BABYLON.Scene(engine);

  // Havok を有効化
  const havokInstance = await HavokPhysics();
  globalThis.HK = havokInstance;
  const havokPlugin = new BABYLON.HavokPlugin(true, havokInstance);
  scene.enablePhysics(new BABYLON.Vector3(0, -9.81, 0), havokPlugin);

  // カメラとライト
  const camera = new BABYLON.ArcRotateCamera("camera", Math.PI/2, Math.PI/3, 6, BABYLON.Vector3.Zero(), scene);
  camera.attachControl(canvas, true);
  new BABYLON.HemisphericLight("light", new BABYLON.Vector3(0, 1, 0), scene);

  // 床
  const ground = BABYLON.MeshBuilder.CreateGround("ground", { width: 10, height: 10 }, scene);
  ground.physicsImpostor = new BABYLON.PhysicsImpostor(
    ground,
    BABYLON.PhysicsImpostor.BoxImpostor,
    { mass: 0, restitution: 0.5 },
    scene
  );

  // 箱
  const box = BABYLON.MeshBuilder.CreateBox("box", { size: 1 }, scene);
  box.position.y = 3;
  box.physicsImpostor = new BABYLON.PhysicsImpostor(
    box,
    BABYLON.PhysicsImpostor.BoxImpostor,
    { mass: 1, restitution: 0.7 },
    scene
  );


  // Create a static box shape.
  const groundAggregate = new BABYLON.PhysicsAggregate(ground,
						       BABYLON.PhysicsShapeType.BOX,
						       { mass: 0 }, scene);

  // XR エクスペリエンス
  const xr = await scene.createDefaultXRExperienceAsync({ floorMeshes: [ground] });

  engine.runRenderLoop(() => scene.render());
}

initScene();
